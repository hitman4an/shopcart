{"ast":null,"code":"import _classCallCheck from \"C:\\\\react-apps\\\\shopcart2\\\\shopcart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\react-apps\\\\shopcart2\\\\shopcart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\react-apps\\\\shopcart2\\\\shopcart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\react-apps\\\\shopcart2\\\\shopcart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\react-apps\\\\shopcart2\\\\shopcart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\react-apps\\\\shopcart2\\\\shopcart\\\\src\\\\product-list-item\\\\product-list-item.js\";\nimport React, { Component } from 'react';\nimport './product-list-item.css';\n\nvar ProductListItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProductListItem, _Component);\n\n  function ProductListItem() {\n    _classCallCheck(this, ProductListItem);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProductListItem).apply(this, arguments));\n  }\n\n  _createClass(ProductListItem, [{\n    key: \"render\",\n\n    /*     state = {\r\n            id: this.props.id,\r\n            price: this.props.price,\r\n            quantity: this.props.quantity,\r\n            discount: 0,\r\n            summary: this.props.summary \r\n        }; */\n\n    /* updateQuantity = (id, quantity) => {\r\n        this.props.onQuantityChange(id,quantity)\r\n    };\r\n      QuantityChange = (e) => {\r\n        this.setState({\r\n            quantity: e.target.value,\r\n            id: e.target.id,\r\n            summary: this.countSum(this.props.price,e.target.value,\r\n                                        this.state.discount)\r\n        })\r\n          this.updateQuantity(this.state.id, this.state.quantity);\r\n        };\r\n    \r\n    countSum(price,quantity,discount) {\r\n        return quantity*price - quantity*price*discount;\r\n    }\r\n        \r\n        DiscountChange = (e) => {\r\n            this.setState({\r\n                discount: e.target.value,\r\n                id: e.target.id,\r\n                summary: this.countSum(this.props.price,this.state.quantity, \r\n                                        e.target.value)\r\n            })\r\n        }; */\n    value: function render() {\n      var _this$props = this.props,\n          name = _this$props.name,\n          price = _this$props.price,\n          quantity = _this$props.quantity,\n          discount = _this$props.discount,\n          onQuantityChange = _this$props.onQuantityChange,\n          onDeleted = _this$props.onDeleted,\n          summary = _this$props.summary;\n      return React.createElement(React.Fragment, null, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"number\",\n        min: \"1\",\n        max: \"100\",\n        value: quantity,\n        onChange: onQuantityChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, price), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"form-control\",\n        onChange: this.DiscountChange,\n        value: discount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"0%\"), React.createElement(\"option\", {\n        value: \"0.1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"10%\"), React.createElement(\"option\", {\n        value: \"0.25\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"25%\"))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, summary), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-danger btn-sm float-right\",\n        onClick: onDeleted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-trash-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ProductListItem;\n}(Component);\n\nexport { ProductListItem as default };","map":{"version":3,"sources":["C:\\react-apps\\shopcart2\\shopcart\\src\\product-list-item\\product-list-item.js"],"names":["React","Component","ProductListItem","props","name","price","quantity","discount","onQuantityChange","onDeleted","summary","DiscountChange"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAO,yBAAP;;IAEqBC,e;;;;;;;;;;;;;;AAErB;;;;;;;;AAQI;;;;;;;;;;;;;;;;;;;;;;;;;6BA6BQ;AAAA,wBAGwC,KAAKC,KAH7C;AAAA,UAEGC,IAFH,eAEGA,IAFH;AAAA,UAESC,KAFT,eAESA,KAFT;AAAA,UAEgBC,QAFhB,eAEgBA,QAFhB;AAAA,UAE0BC,QAF1B,eAE0BA,QAF1B;AAAA,UAGAC,gBAHA,eAGAA,gBAHA;AAAA,UAGkBC,SAHlB,eAGkBA,SAHlB;AAAA,UAG6BC,OAH7B,eAG6BA,OAH7B;AAIJ,aACI,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKN,IADL,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,SAAS,EAAC,cAAjB;AAAgC,QAAA,IAAI,EAAC,QAArC;AAA8C,QAAA,GAAG,EAAE,GAAnD;AAAuD,QAAA,GAAG,EAAC,KAA3D;AACA,QAAA,KAAK,EAAEE,QADP;AAEA,QAAA,QAAQ,EAAEE,gBAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKH,KADL,CAVJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAQ,QAAA,SAAS,EAAC,cAAlB;AACA,QAAA,QAAQ,EAAE,KAAKM,cADf;AAC+B,QAAA,KAAK,EAAEJ,QADtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFR,EAGQ;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHR,EAIQ;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJR,CADA,CAbJ,EAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKG,OADL,CArBJ,EAwBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AACI,QAAA,SAAS,EAAC,2CADd;AAEI,QAAA,OAAO,EAAED,SAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI;AAAG,QAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ,CAxBJ,CADJ;AAkCH;;;;EA7EwCR,S;;SAAxBC,e","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport './product-list-item.css';\r\n\r\nexport default class ProductListItem extends Component {\r\n    \r\n/*     state = {\r\n        id: this.props.id,\r\n        price: this.props.price,\r\n        quantity: this.props.quantity,\r\n        discount: 0,\r\n        summary: this.props.summary \r\n    }; */\r\n\r\n    /* updateQuantity = (id, quantity) => {\r\n        this.props.onQuantityChange(id,quantity)\r\n    };\r\n\r\n    QuantityChange = (e) => {\r\n        this.setState({\r\n            quantity: e.target.value,\r\n            id: e.target.id,\r\n            summary: this.countSum(this.props.price,e.target.value,\r\n                                        this.state.discount)\r\n        })\r\n\r\n        this.updateQuantity(this.state.id, this.state.quantity);\r\n        };\r\n    \r\n    countSum(price,quantity,discount) {\r\n        return quantity*price - quantity*price*discount;\r\n    }\r\n        \r\n        DiscountChange = (e) => {\r\n            this.setState({\r\n                discount: e.target.value,\r\n                id: e.target.id,\r\n                summary: this.countSum(this.props.price,this.state.quantity, \r\n                                        e.target.value)\r\n            })\r\n        }; */\r\n        \r\n   \r\n    render(){\r\n        \r\n        const {name, price, quantity, discount, \r\n            onQuantityChange, onDeleted, summary} = this.props;\r\n        return (\r\n            <>\r\n                <td>\r\n                    {name}\r\n                </td>\r\n                <td>\r\n                    <input className=\"form-control\" type=\"number\" min =\"1\" max=\"100\"\r\n                    value={quantity}  \r\n                    onChange={onQuantityChange}> \r\n                    </input>\r\n                </td>\r\n                <td>\r\n                    {price}  \r\n                </td>\r\n                <td>\r\n                <select className=\"form-control\"\r\n                onChange={this.DiscountChange} value={discount}>\r\n                        <option value=\"0\">0%</option>\r\n                        <option value=\"0.1\">10%</option>\r\n                        <option value=\"0.25\">25%</option>\r\n                    </select>\r\n                </td>\r\n                <td>\r\n                    {summary}\r\n                </td>\r\n                <td>\r\n                    <button type=\"button\"\r\n                        className=\"btn btn-outline-danger btn-sm float-right\"\r\n                        onClick={onDeleted}>\r\n                        <i className=\"fa fa-trash-o\" />\r\n                    </button>\r\n                </td>\r\n            </>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}